# Neuroconductor Template
language: r
sudo: false
cache: packages
warnings_are_errors: true
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
dist: precise

os:
  - linux
  - osx

env:
  global:
  - R_BUILD_ARGS="--no-build-vignettes --no-manual"
  - R_CHECK_ARGS="--as-cran --install-args=--build"
  - RGL_USE_NULL=TRUE
  - PROJECT_NAME=neuroconductor

before_install:
  - export PROJ_DIR=`basename $PWD`
  - fname=travis_helpers.sh
  - wget -O ${fname} http://bit.ly/travis_helpers
  - cat ${fname}; source ${fname}; rm ${fname}  
  - cat DESCRIPTION
  - export PACKAGE_NAME=`package_name`  
  - export RCHECK_DIR=${PACKAGE_NAME}.Rcheck
  - Rscript -e 'source("https://install-github.me/mangothecat/callr")'
  - remove_neuroc_packages
  - export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
  # does all the clang exports
  - x=`export_clang_cxx`; eval ${x}
  - echo "CC=${CC}, CXX=${CXX}, CXX1X=${CXX1X}"
  - echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"  
  - clang_cxx  
  - export cmake_version="3.4"
  - cmake --version
  - x=`cmake_setup`; echo "${x}"; eval ${x};
  - cmake --version
  - export ants_user=neuroconductor
  - echo "Installing Missing Deps ITKR"
  - install_missing_remote_deps ${ants_user}/ITKR
  - gh_binary_install ${ants_user}/ITKR ;
  - if [[ "${PACKAGE_NAME}" != "ITKR" ]]; 
    then
      echo "Installing Missing Deps ANTsRCore" ;
      install_missing_remote_deps ${ants_user}/ANTsRCore;
      gh_binary_install ${ants_user}/ANTsRCore ;
    fi
  - if [[ "${PACKAGE_NAME}" != "ANTsRCore" && "${PACKAGE_NAME}" != "ITKR" ]]; 
    then
      echo "Installing Missing Deps ANTsR" ;
      install_missing_remote_deps ${ants_user}/ANTsR ;
      gh_binary_install ${ants_user}/ANTsR ;
    fi    
  - if [[ "${PACKAGE_NAME}" == "ANTsR" ]]; 
    then 
      export _R_CHECK_FORCE_SUGGESTS_=0 ;
    fi
  - cat DESCRIPTION
  - install_remotes_no_dep
  - cat DESCRIPTION
  - echo $PATH ;
  - install_deps_no_suggests

script:
  # - source ~/.R/Makevars
  - x=`export_clang_cxx`; eval ${x}
  - travis_wait 100 R CMD build ${R_BUILD_ARGS} . 
  - rm -f travis_wait*.log
  - PKG_TARBALL=$(ls -1t *.tar.gz | head -n 1)
  - ls
  - travis_wait 100 R CMD check ${R_CHECK_ARGS} "${PKG_TARBALL}"; CHECK_RET=$? ;
  - rm -f travis_wait*.log
  - check_fail
  - check_warnings
  # - Rscript -e "message(devtools::check_failures(path = \"${RCHECK_DIR}\"))" ;
  # - grep -q -R "WARNING" "${RCHECK_DIR}/00check.log" ; if [[ $? -eq 0 ]]; error 1; fi  
  # - if [[ ${#TRAVIS_TAG} -eq 0 ]]; 
  #   then 
  #   travis_wait 100 R CMD check ${R_CHECK_ARGS} "${PKG_TARBALL}"; 
  #   fi

after_success:
  - cat ${PACKAGE_NAME}.Rcheck/00install.out
  - cat ${PACKAGE_NAME}.Rcheck/00check.log

after_failure:
  - cat ${PACKAGE_NAME}.Rcheck/00install.out
  - cat ${PACKAGE_NAME}.Rcheck/00check.log

# so no overwrite of linux build
before_deploy:
  - if [ "$TRAVIS_OS_NAME" = "osx" ];
    then
      rm -f *.tar.gz;
    fi

deploy:
  provider: releases
  skip_cleanup: true
  api_key:
    secure: "${NEUROCKEY}"
  file_glob: true
  file: ${PACKAGE_NAME}*.t*gz
  on:
    tags: true

after_deploy:
  - if [[ "${PACKAGE_NAME}" != "ANTsR" && "${PACKAGE_NAME}" != "ITKR" && "${PACKAGE_NAME}" != "ANTsRCore" ]]; 
      Rscript -e 'covr::coveralls(type = "all")' ;
    fi 